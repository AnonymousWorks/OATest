a = ['abs', 'acos', 'acosh', 'add', 'arange', 'argmax', 'argmin', 'argsort', 'asin', 'asinh', 'assert_op', 'atan', 'atanh', 'bitwise_and', 'bitwise_not', 'bitwise_or', 'bitwise_xor', 'broadcast_to', 'call_builtin_with_ctx', 'call_dps_packed', 'call_inplace_packed', 'call_pure_packed', 'ccl', 'ceil', 'clip', 'collapse_sum_like', 'collapse_sum_to', 'concat', 'cos', 'cosh',  'cumprod', 'cumsum', 'datatype', 'dequantize', 'divide', 'dynamic_strided_slice', 'einsum', 'equal', 'erf', 'ewise_fma', 'exp', 'expand_dims', 'flatten', 'flip', 'floor', 'floor_divide', 'full', 'full_like', 'grad', 'greater', 'greater_equal', 'hint_on_device', 'image', 'invoke_closure', 'invoke_pure_closure', 'isfinite', 'isinf', 'isnan', 'layout_transform', 'less', 'less_equal', 'linear', 'log', 'logical_and', 'logical_not', 'logical_or', 'logical_xor', 'make_closure', 'manipulate', 'mask', 'masked_fill', 'matmul', 'max', 'maximum', 'mean', 'memory', 'min', 'minimum', 'multinomial_from_uniform', 'multiply', 'negative', 'not_equal', 'null_value', 'ones', 'ones_like', 'op_attrs', 'permute_dims', 'power', 'prod', 'qdq', 'quantize', 'register_gradient', 'repeat', 'reshape', 'round', 'rsqrt', 'sampling', 'scatter_elements', 'search', 'set', 'shape_of', 'shape_to_tensor', 'sigmoid', 'sign', 'sin', 'sinh', 'sort', 'sorting', 'split', 'sqrt', 'square', 'squeeze', 'statistical', 'std', 'strided_slice', 'subtract', 'sum', 'take', 'tan', 'tanh', 'tensor_to_shape', 'ternary', 'tile', 'to_vdevice', 'topk', 'tril', 'triu', 'unary', 'unique', 'variance', 'where', 'wrap_param', 'zeros', 'zeros_like']
b = ['abs', 'acos', 'acosh', 'add', 'arange', 'argmax', 'argmin', 'argsort', 'asin', 'asinh', 'assert_op', 'atan', 'atanh', 'bitwise_and', 'bitwise_not', 'bitwise_or', 'bitwise_xor', 'broadcast_to', 'call_builtin_with_ctx', 'call_dps_packed', 'call_inplace_packed', 'call_pure_packed', 'ccl', 'ceil', 'clip', 'collapse_sum_like', 'collapse_sum_to', 'concat', 'cos', 'cosh',  'cumprod', 'cumsum', 'dataflow', 'dequantize', 'divide', 'dynamic_strided_slice', 'einsum', 'equal', 'erf', 'ewise_fma', 'exp', 'expand_dims', 'flatten', 'flip', 'floor', 'floor_divide', 'full', 'full_like', 'grad', 'greater', 'greater_equal', 'hint_on_device', 'image', 'invoke_closure', 'invoke_pure_closure', 'isfinite', 'isinf', 'isnan', 'layout_transform', 'less', 'less_equal', 'linear', 'log', 'logical_and', 'logical_not', 'logical_or', 'logical_xor', 'macro', 'make_closure', 'match_cast', 'matmul', 'max', 'maximum', 'mean', 'memory', 'metal', 'min', 'minimum', 'multinomial_from_uniform', 'multiply', 'negative', 'not_equal', 'null_value', 'ones', 'ones_like', 'opencl', 'output', 'permute_dims', 'power', 'prim_value', 'prod', 'quantize', 'repeat', 'reshape', 'rocm', 'round', 'rsqrt', 'scatter_elements', 'shape', 'shape_of', 'shape_to_tensor', 'sigmoid', 'sign', 'sin', 'sinh', 'sort', 'split', 'sqrt', 'square', 'squeeze', 'std', 'stop_lift_params', 'str', 'strided_slice', 'subtract', 'sum', 'take', 'tan', 'tanh', 'tensor_to_shape', 'tile','topk', 'tril', 'triu', 'tuple', 'unique', 'where', 'wrap_param', 'zeros', 'zeros_like']
print(len(a), len(b))
c = set(a).intersection(set(b))
print(len(c))
print(list(c))

simple_op = ['repeat', 'exp', 'erf', 'add', 'bitwise_not', 'acos', 'sqrt', 'squeeze', 'collapse_sum_like', 'broadcast_to', 'shape_to_tensor', 'cos', 'logical_and', 'power', 'minimum', 'null_value', 'permute_dims', 'collapse_sum_to', 'bitwise_or', 'isfinite', 'greater_equal', 'matmul', 'sigmoid', 'expand_dims', 'assert_op', 'scatter_elements', 'memory', 'mean', 'dequantize', 'shape_of', 'ones_like', 'subtract', 'not_equal', 'call_builtin_with_ctx', 'call_dps_packed', 'topk', 'cumprod', 'ones', 'multiply', 'zeros_like', 'invoke_pure_closure', 'where', 'log', 'min', 'invoke_closure', 'clip', 'sinh', 'cosh', 'less', 'sin', 'abs', 'nn', 'prod', 'logical_not', 'concat', 'maximum', 'full', 'round', 'quantize', 'ceil', 'unique', 'dynamic_strided_slice', 'negative', 'equal', 'layout_transform', 'zeros', 'tanh', 'acosh', 'multinomial_from_uniform', 'call_pure_packed', 'isnan', 'einsum', 'asin', 'sort', 'ccl', 'max', 'image', 'sign', 'argmax', 'tensor_to_shape', 'grad', 'atan', 'flatten', 'full_like', 'print', 'strided_slice', 'std', 'hint_on_device', 'atanh', 'argsort', 'tril', 'arange', 'rsqrt', 'sum', 'bitwise_xor', 'asinh', 'linear', 'square', 'triu', 'argmin', 'logical_or', 'ewise_fma', 'astype', 'logical_xor', 'floor', 'floor_divide', 'make_closure', 'isinf', 'divide', 'wrap_param', 'call_inplace_packed', 'bitwise_and', 'tile', 'cumsum', 'flip', 'split', 'less_equal', 'reshape', 'greater', 'tan', 'take']
nn_relax = ['adaptive_avg_pool1d', 'adaptive_avg_pool2d', 'adaptive_avg_pool3d', 'attention', 'attention_var_len', 'avg_pool1d', 'avg_pool2d', 'avg_pool3d', 'batch_norm', 'conv1d', 'conv1d_transpose', 'conv2d', 'conv2d_transpose', 'conv3d', 'cross_entropy_with_logits', 'dropout', 'gelu', 'gelu_tanh', 'group_norm', 'layer_norm', 'leakyrelu', 'log_softmax', 'max_pool1d', 'max_pool2d', 'max_pool3d', 'nll_loss', 'pad', 'relu', 'rms_norm', 'silu', 'softmax']
print(len(nn_relax))

unary_op = ['abs', 'acos', 'acosh', 'args_converter', 'asin', 'asinh', 'atan', 'atanh', 'bitwise_not', 'ceil', 'clip', 'cos', 'cosh', 'erf', 'exp', 'floor', 'isfinite', 'isinf', 'isnan', 'log', 'logical_not', 'negative', 'round', 'rsqrt', 'sigmoid', 'sign', 'sin', 'sinh', 'sqrt', 'square', 'tan', 'tanh']
binary_op = ['add', 'bitwise_and', 'bitwise_or', 'bitwise_xor', 'divide', 'equal', 'floor_divide', 'greater', 'greater_equal', 'less', 'less_equal', 'logical_and', 'logical_or', 'logical_xor', 'maximum', 'minimum', 'multiply', 'not_equal', 'power', 'subtract']
ternary = ['ewise_fma']

other_simple_op = list(set(simple_op) - set(binary_op) - set(unary_op))
print(other_simple_op)

